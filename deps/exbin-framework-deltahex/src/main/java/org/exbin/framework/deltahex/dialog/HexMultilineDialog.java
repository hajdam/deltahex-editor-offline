/*
 * Copyright (C) ExBin Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package org.exbin.framework.deltahex.dialog;

import java.awt.BorderLayout;
import javax.swing.JOptionPane;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;
import org.exbin.deltahex.swing.CodeArea;
import org.exbin.framework.deltahex.DeltaHexModule;
import org.exbin.framework.deltahex.panel.SearchCondition;
import org.exbin.framework.gui.utils.LanguageUtils;
import org.exbin.framework.gui.utils.WindowUtils;
import org.exbin.utils.binary_data.EditableBinaryData;

/**
 * Multiline search condition editor dialog.
 *
 * @version 0.1.0 2016/07/21
 * @author ExBin Project (http://exbin.org)
 */
public class HexMultilineDialog extends javax.swing.JDialog {

    private static final String POPUP_MENU_POSTFIX = ".hexMultilineDialog";

    private int dialogOption = JOptionPane.CLOSED_OPTION;
    private final java.util.ResourceBundle resourceBundle = LanguageUtils.getResourceBundleByClass(HexMultilineDialog.class);
    private SearchCondition condition;

    private JTextArea textArea;
    private JScrollPane scrollPane;
    private CodeArea codeArea;
    private DeltaHexModule.CodeAreaPopupMenuHandler hexCodePopupMenuHandler;

    public HexMultilineDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        init();
    }

    private void init() {
        WindowUtils.initWindow(this);
        WindowUtils.addHeaderPanel(this, resourceBundle.getString("header.title"), resourceBundle.getString("header.description"), resourceBundle.getString("header.icon"));
        WindowUtils.assignGlobalKeyListener(this, setButton, cancelButton);
    }

    /**
     *
     *
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     *
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        controlPanel = new javax.swing.JPanel();
        setButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();

        setTitle(resourceBundle.getString("Form.title")); // NOI18N
        setModal(true);
        setName("Form"); // NOI18N

        controlPanel.setName("controlPanel"); // NOI18N

        setButton.setText(resourceBundle.getString("setButton.text")); // NOI18N
        setButton.setName("setButton"); // NOI18N
        setButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                setButtonActionPerformed(evt);
            }
        });

        cancelButton.setText(resourceBundle.getString("cancelButton.text")); // NOI18N
        cancelButton.setName("cancelButton"); // NOI18N
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout controlPanelLayout = new javax.swing.GroupLayout(controlPanel);
        controlPanel.setLayout(controlPanelLayout);
        controlPanelLayout.setHorizontalGroup(
            controlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, controlPanelLayout.createSequentialGroup()
                .addContainerGap(284, Short.MAX_VALUE)
                .addComponent(setButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cancelButton)
                .addContainerGap())
        );
        controlPanelLayout.setVerticalGroup(
            controlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, controlPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(controlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cancelButton)
                    .addComponent(setButton))
                .addContainerGap())
        );

        getContentPane().add(controlPanel, java.awt.BorderLayout.PAGE_END);

        setSize(new java.awt.Dimension(437, 373));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        dialogOption = JOptionPane.CANCEL_OPTION;
        WindowUtils.closeWindow(this);
    }//GEN-LAST:event_cancelButtonActionPerformed

    private void setButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_setButtonActionPerformed
        dialogOption = JOptionPane.OK_OPTION;
        WindowUtils.closeWindow(this);
    }//GEN-LAST:event_setButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        WindowUtils.invokeWindow(new HexMultilineDialog(new javax.swing.JFrame(), true));
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancelButton;
    private javax.swing.JPanel controlPanel;
    private javax.swing.JButton setButton;
    // End of variables declaration//GEN-END:variables

    public int getDialogOption() {
        return dialogOption;
    }

    public String getMultilineText() {
        return textArea.getText();
    }

    public SearchCondition getCondition() {
        if (condition.getSearchMode() == SearchCondition.SearchMode.TEXT) {
            condition.setSearchText(textArea.getText());
        } else {
            condition.setBinaryData((EditableBinaryData) codeArea.getData());
        }

        return condition;
    }

    public void setCondition(SearchCondition condition) {
        this.condition = condition;
        if (condition.getSearchMode() == SearchCondition.SearchMode.TEXT) {
            scrollPane = new javax.swing.JScrollPane();
            textArea = new javax.swing.JTextArea();
            textArea.setColumns(20);
            textArea.setRows(5);
            textArea.setName("textArea"); // NOI18N
            scrollPane.setViewportView(textArea);

            textArea.setText(condition.getSearchText());
            add(scrollPane, BorderLayout.CENTER);
            WindowUtils.assignGlobalKeyListener(scrollPane, setButton, cancelButton);
        } else {
            codeArea = new CodeArea();
            codeArea.setData(condition.getBinaryData());
            add(codeArea, BorderLayout.CENTER);
            if (hexCodePopupMenuHandler != null) {
                codeArea.setComponentPopupMenu(hexCodePopupMenuHandler.createPopupMenu(codeArea, POPUP_MENU_POSTFIX));
            }
            WindowUtils.assignGlobalKeyListener(codeArea, setButton, cancelButton);
        }
    }

    public void setHexCodePopupMenuHandler(DeltaHexModule.CodeAreaPopupMenuHandler hexCodePopupMenuHandler) {
        this.hexCodePopupMenuHandler = hexCodePopupMenuHandler;
    }

    public void detachMenu() {
        if (condition.getSearchMode() == SearchCondition.SearchMode.BINARY) {
            hexCodePopupMenuHandler.dropPopupMenu(POPUP_MENU_POSTFIX);
        }
    }
}
