/*
 * Copyright (C) ExBin Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package org.exbin.framework.deltahex.panel;

import java.util.List;
import java.util.ResourceBundle;
import java.util.prefs.Preferences;
import org.exbin.framework.gui.options.api.OptionsPanel;
import org.exbin.framework.gui.options.api.OptionsPanel.ModifiedOptionListener;
import org.exbin.framework.gui.utils.LanguageUtils;

/**
 * Hexadecimal appearance options panel.
 *
 * @version 0.2.0 2016/12/08
 * @author ExBin Project (http://exbin.org)
 */
public class HexAppearanceOptionsPanel extends javax.swing.JPanel implements OptionsPanel {

    public static final String PREFERENCES_TEXT_WORD_WRAPPING = "textAppearance.wordWrap";
    public static final String PREFERENCES_DELTA_DATA_MODE = "experimentalDeltaMode";
    public static final String PREFERENCES_MULTITAB_MODE = "experimentalMultiTabMode";

    private ModifiedOptionListener modifiedOptionListener;
    private final ResourceBundle resourceBundle = LanguageUtils.getResourceBundleByClass(HexAppearanceOptionsPanel.class);
    private final HexAppearancePanelFrame frame;

    public HexAppearanceOptionsPanel(HexAppearancePanelFrame frame) {
        this.frame = frame;

        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lineWrapCheckBox = new javax.swing.JCheckBox();
        multiTabModeCheckBox = new javax.swing.JCheckBox();
        deltaModeCheckBox = new javax.swing.JCheckBox();

        setName("Form"); // NOI18N

        lineWrapCheckBox.setSelected(true);
        lineWrapCheckBox.setText(resourceBundle.getString("HexAppearanceOptionsPanel.lineWrapCheckBox.text")); // NOI18N
        lineWrapCheckBox.setName("lineWrapCheckBox"); // NOI18N
        lineWrapCheckBox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                lineWrapCheckBoxjCheckBoxItemStateChanged(evt);
            }
        });

        multiTabModeCheckBox.setText(resourceBundle.getString("HexAppearanceOptionsPanel.multiTabModeCheckBox.text")); // NOI18N
        multiTabModeCheckBox.setName("multiTabModeCheckBox"); // NOI18N
        multiTabModeCheckBox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                multiTabModeCheckBoxjCheckBoxItemStateChanged(evt);
            }
        });

        deltaModeCheckBox.setText(resourceBundle.getString("HexAppearanceOptionsPanel.deltaModeCheckBox.text")); // NOI18N
        deltaModeCheckBox.setName("deltaModeCheckBox"); // NOI18N
        deltaModeCheckBox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                deltaModeCheckBoxjCheckBoxItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lineWrapCheckBox, javax.swing.GroupLayout.DEFAULT_SIZE, 274, Short.MAX_VALUE)
                    .addComponent(multiTabModeCheckBox, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 274, Short.MAX_VALUE)
                    .addComponent(deltaModeCheckBox, javax.swing.GroupLayout.DEFAULT_SIZE, 274, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lineWrapCheckBox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(multiTabModeCheckBox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(deltaModeCheckBox)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void lineWrapCheckBoxjCheckBoxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_lineWrapCheckBoxjCheckBoxItemStateChanged
        setModified(true);
    }//GEN-LAST:event_lineWrapCheckBoxjCheckBoxItemStateChanged

    private void multiTabModeCheckBoxjCheckBoxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_multiTabModeCheckBoxjCheckBoxItemStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_multiTabModeCheckBoxjCheckBoxItemStateChanged

    private void deltaModeCheckBoxjCheckBoxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_deltaModeCheckBoxjCheckBoxItemStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_deltaModeCheckBoxjCheckBoxItemStateChanged


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox deltaModeCheckBox;
    private javax.swing.JCheckBox lineWrapCheckBox;
    private javax.swing.JCheckBox multiTabModeCheckBox;
    // End of variables declaration//GEN-END:variables

    @Override
    public List<OptionsPanel.PathItem> getPath() {
        return null;
    }

    @Override
    public void loadFromPreferences(Preferences preferences) {
        lineWrapCheckBox.setSelected(Boolean.parseBoolean(preferences.get(PREFERENCES_TEXT_WORD_WRAPPING, Boolean.FALSE.toString())));
        deltaModeCheckBox.setSelected(Boolean.parseBoolean(preferences.get(PREFERENCES_DELTA_DATA_MODE, Boolean.FALSE.toString())));
        multiTabModeCheckBox.setSelected(Boolean.parseBoolean(preferences.get(PREFERENCES_MULTITAB_MODE, Boolean.FALSE.toString())));
    }

    @Override
    public void saveToPreferences(Preferences preferences) {
        preferences.put(PREFERENCES_TEXT_WORD_WRAPPING, Boolean.toString(lineWrapCheckBox.isSelected()));
        preferences.put(PREFERENCES_DELTA_DATA_MODE, Boolean.toString(deltaModeCheckBox.isSelected()));
        preferences.put(PREFERENCES_MULTITAB_MODE, Boolean.toString(multiTabModeCheckBox.isSelected()));
    }

    @Override
    public void applyPreferencesChanges() {
        frame.setWordWrapMode(lineWrapCheckBox.isSelected());
    }

    private void setModified(boolean modified) {
        if (modifiedOptionListener != null) {
            modifiedOptionListener.wasModified();
        }
    }

    @Override
    public void setModifiedOptionListener(ModifiedOptionListener listener) {
        modifiedOptionListener = listener;
    }
}
