/*
 * Copyright (C) ExBin Project
 *
 * This application or library is free software: you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public License as
 * published by the Free Software Foundation, either version 3 of the License,
 * or (at your option) any later version.
 *
 * This application or library is distributed in the hope that it will be
 * useful, but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 * See the GNU Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License
 * along this application.  If not, see <http://www.gnu.org/licenses/>.
 */
package org.exbin.framework.editor.text.panel;

import java.awt.event.FocusAdapter;
import java.awt.event.FocusEvent;
import java.util.ResourceBundle;
import javax.swing.JSpinner;
import javax.swing.SpinnerNumberModel;
import javax.swing.SwingUtilities;
import javax.swing.text.JTextComponent;
import org.exbin.framework.gui.utils.LanguageUtils;
import org.exbin.framework.gui.utils.WindowUtils;

/**
 * Go to line panel.
 *
 * @version 0.2.0 2017/01/04
 * @author ExBin Project (http://exbin.org)
 */
public class TextGoToPanel extends javax.swing.JPanel {

    private final java.util.ResourceBundle resourceBundle = LanguageUtils.getResourceBundleByClass(TextGoToPanel.class);

    public TextGoToPanel() {
        initComponents();
        init();
    }

    private void init() {
        // Spinner selection workaround from http://forums.sun.com/thread.jspa?threadID=409748&forumID=57
        ((JSpinner.DefaultEditor) jumpLineSpinner.getEditor()).getTextField().addFocusListener(new FocusAdapter() {
            @Override
            public void focusGained(FocusEvent e) {
                if (e.getSource() instanceof JTextComponent) {
                    final JTextComponent textComponent = ((JTextComponent) e.getSource());
                    SwingUtilities.invokeLater(new Runnable() {
                        @Override
                        public void run() {
                            textComponent.selectAll();
                        }
                    });
                }
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jumpLineLabel = new javax.swing.JLabel();
        jumpLineSpinner = new javax.swing.JSpinner();
        posLineLabel = new javax.swing.JLabel();
        posLineSpinner = new javax.swing.JSpinner();

        jumpLineLabel.setText(resourceBundle.getString("jumpLineLabel.text")); // NOI18N

        jumpLineSpinner.setModel(new javax.swing.SpinnerNumberModel(1, 1, 1, 1));

        posLineLabel.setText(resourceBundle.getString("posLineLabel.text")); // NOI18N

        posLineSpinner.setModel(new javax.swing.SpinnerNumberModel(1, 1, null, 1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jumpLineSpinner, javax.swing.GroupLayout.DEFAULT_SIZE, 169, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jumpLineLabel)
                            .addComponent(posLineLabel))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(posLineSpinner, javax.swing.GroupLayout.DEFAULT_SIZE, 169, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jumpLineLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jumpLineSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(posLineLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(posLineSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jumpLineLabel;
    private javax.swing.JSpinner jumpLineSpinner;
    private javax.swing.JLabel posLineLabel;
    private javax.swing.JSpinner posLineSpinner;
    // End of variables declaration//GEN-END:variables

    /**
     * Test method for this panel.
     *
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        WindowUtils.invokeDialog(new TextGoToPanel());
    }

    public ResourceBundle getResourceBundle() {
        return resourceBundle;
    }

    public void setCharPos(int i) {
        ((SpinnerNumberModel) posLineSpinner.getModel()).setValue(i);
    }

    public int getLine() {
        return (Integer) jumpLineSpinner.getValue();
    }

    public int getCharPos() {
        return (Integer) posLineSpinner.getValue();
    }

    public void setMaxLine(int i) {
        ((SpinnerNumberModel) jumpLineSpinner.getModel()).setMaximum(i);
    }

    public void setMaxCharPos(int i) {
        ((SpinnerNumberModel) posLineSpinner.getModel()).setMaximum(i);
    }

    public void setSelected() {
        jumpLineSpinner.requestFocusInWindow();
    }

    public void initFocus() {

    }
}
