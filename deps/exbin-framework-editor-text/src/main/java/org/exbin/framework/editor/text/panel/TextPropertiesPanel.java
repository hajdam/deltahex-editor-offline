/*
 * Copyright (C) ExBin Project
 *
 * This application or library is free software: you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public License as
 * published by the Free Software Foundation, either version 3 of the License,
 * or (at your option) any later version.
 *
 * This application or library is distributed in the hope that it will be
 * useful, but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 * See the GNU Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License
 * along this application.  If not, see <http://www.gnu.org/licenses/>.
 */
package org.exbin.framework.editor.text.panel;

import java.net.URI;
import java.nio.ByteBuffer;
import java.nio.CharBuffer;
import java.nio.charset.CharacterCodingException;
import java.nio.charset.Charset;
import java.nio.charset.CharsetEncoder;
import java.util.ResourceBundle;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.text.Document;
import org.exbin.framework.gui.utils.LanguageUtils;
import org.exbin.framework.gui.utils.WindowUtils;

/**
 * Text file properties panel.
 *
 * @version 0.2.0 2017/01/04
 * @author ExBin Project (http://exbin.org)
 */
public class TextPropertiesPanel extends javax.swing.JPanel {

    private final java.util.ResourceBundle resourceBundle = LanguageUtils.getResourceBundleByClass(TextPropertiesPanel.class);

    public TextPropertiesPanel() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        fileNameLabel = new javax.swing.JLabel();
        fileNameTextField = new javax.swing.JTextField();
        documentSizePanel = new javax.swing.JPanel();
        linesCountLabel = new javax.swing.JLabel();
        linesCountTextField = new javax.swing.JTextField();
        charCountLabel = new javax.swing.JLabel();
        charCountTextField = new javax.swing.JTextField();
        fileSizeLabel = new javax.swing.JLabel();
        fileSizeTextField = new javax.swing.JTextField();
        wordsCountLabel = new javax.swing.JLabel();
        wordsCountTextField = new javax.swing.JTextField();

        fileNameLabel.setText(resourceBundle.getString("fileNameLabel.text")); // NOI18N

        fileNameTextField.setEditable(false);

        documentSizePanel.setBorder(javax.swing.BorderFactory.createTitledBorder(resourceBundle.getString("documentSizePanel.border.title"))); // NOI18N

        linesCountLabel.setText(resourceBundle.getString("linesCountLabel.text")); // NOI18N

        linesCountTextField.setEditable(false);

        charCountLabel.setText(resourceBundle.getString("charCountLabel.text")); // NOI18N

        charCountTextField.setEditable(false);

        fileSizeLabel.setText(resourceBundle.getString("fileSizeLabel.text")); // NOI18N

        fileSizeTextField.setEditable(false);

        wordsCountLabel.setText(resourceBundle.getString("wordsCountLabel.text")); // NOI18N

        wordsCountTextField.setEditable(false);

        javax.swing.GroupLayout documentSizePanelLayout = new javax.swing.GroupLayout(documentSizePanel);
        documentSizePanel.setLayout(documentSizePanelLayout);
        documentSizePanelLayout.setHorizontalGroup(
            documentSizePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(documentSizePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(documentSizePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(linesCountLabel)
                    .addComponent(charCountLabel)
                    .addComponent(fileSizeLabel)
                    .addComponent(wordsCountLabel)
                    .addComponent(charCountTextField)
                    .addComponent(fileSizeTextField)
                    .addComponent(wordsCountTextField, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(linesCountTextField))
                .addContainerGap())
        );
        documentSizePanelLayout.setVerticalGroup(
            documentSizePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(documentSizePanelLayout.createSequentialGroup()
                .addComponent(linesCountLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(linesCountTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(charCountLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(charCountTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(fileSizeLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(fileSizeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(wordsCountLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(wordsCountTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(15, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(documentSizePanel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(fileNameLabel, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(fileNameTextField, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 388, Short.MAX_VALUE))
                    .addContainerGap()))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 305, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(fileNameLabel)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(fileNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(18, 18, 18)
                    .addComponent(documentSizePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel charCountLabel;
    private javax.swing.JTextField charCountTextField;
    private javax.swing.JPanel documentSizePanel;
    private javax.swing.JLabel fileNameLabel;
    private javax.swing.JTextField fileNameTextField;
    private javax.swing.JLabel fileSizeLabel;
    private javax.swing.JTextField fileSizeTextField;
    private javax.swing.JLabel linesCountLabel;
    private javax.swing.JTextField linesCountTextField;
    private javax.swing.JLabel wordsCountLabel;
    private javax.swing.JTextField wordsCountTextField;
    // End of variables declaration//GEN-END:variables

    /**
     * Test method for this panel.
     *
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        WindowUtils.invokeDialog(new TextPropertiesPanel());
    }

    public void setDocument(TextPanel panel) {
        URI fileUri = panel.getFileUri();
        fileNameTextField.setText(fileUri == null ? "" : fileUri.toString());
        Document document = panel.getDocument();
        linesCountTextField.setText(Integer.toString(panel.getLineCount()));
        charCountTextField.setText(Integer.toString(document.getLength()));
        CharBuffer buffer = CharBuffer.wrap(new StringBuffer(panel.getText()));

        CharsetEncoder encoder = Charset.defaultCharset().newEncoder();
        try {
            ByteBuffer result = encoder.encode(buffer);
            int length = 0;
            while (result.hasRemaining()) {
                result.get();
                length++;
            }
            fileSizeTextField.setText(Integer.toString(length));
        } catch (CharacterCodingException ex) {
            Logger.getLogger(TextPropertiesPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public ResourceBundle getResourceBundle() {
        return resourceBundle;
    }
}
